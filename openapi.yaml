openapi: 3.0.3
info:
  title: Sistema DAC
  version: '1'
  description: >-
    Esta especificação faz parte do projeto de implementação para a disciplina TCC00340 - Desenvolvimento de Aplicações Corporativas, referente ao período 2023/1, ministrada pelo professor Jose Viterbo Filho.
  contact:
    email: brendocosta@id.uff.br
    name: Brendo Costa
servers:
  - url: '{protocol}://localhost:{port}/sistemadac/resources'
    variables:
      protocol:
        enum: [http]
        default: http
      port:
        enum: ['8080']
        default: '8080'
paths:
  /eventos:
    get:
      tags:
        - Eventos
      summary: Retorna uma lista contendo todos os eventos cadastrados
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
    post:
      tags:
        - Eventos
      summary: Cadastra um único evento
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '409':
          description: Já existe um evento cadastrado com o identificador informado
    put:
      tags:
        - Eventos
      summary: Modifica os dados do evento informado
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '404':
          description: Evento não encontrado
  /eventos/{eventoId}:
    delete:
      tags:
        - Eventos
      summary: Remove o evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a ser removido
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
        '404':
          description: Evento não encontrado
    get:
      tags:
        - Eventos
      summary: Retorna o evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a ser retornado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evento'
        '404':
          description: Evento não encontrado
  /eventos/{eventoId}/{anoEdicao}:
    get:
      tags:
        - Eventos
      summary: Retorna a página web da edição do evento informado no ano informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento
          required: true
          schema:
            type: integer
            format: int64
        - name: anoEdicao
          in: path
          description: Ano da edição
          required: true
          schema:
            type: integer
            format: int64
        - name: tituloPagina
          in: query
          description: Título da página
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            text/html:
              schema:
                type: string
        '404':
          description: Página não encontrada
  /eventos/{eventoId}/edicoes:
    get:
      tags:
        - Edições
      summary: Retorna uma lista contendo todas as edições cadastrados para o evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Edicao'
    post:
      tags:
        - Edições
      summary: Cadastra uma única edição para o evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edicao'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '409':
          description: Já existe uma edição cadastrada com o identificador informado
    put:
      tags:
        - Edições
      summary: Modifica os dados da edição informado do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edicao'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '404':
          description: Edição não encontrada
  /eventos/{eventoId}/edicoes/{edicaoId}:
    delete:
      tags:
        - Edições
      summary: Remove a edição informada do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: edicaoId
          in: path
          description: Identificador da edição a ser removida
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
        '404':
          description: Edição não encontrada
    get:
      tags:
        - Edições
      summary: Retorna a edição informada do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: edicaoId
          in: path
          description: Identificador da edição a ser retornada
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edicao'
        '404':
          description: Edição não encontrada
  /eventos/{eventoId}/edicoes/{edicaoId}/organizadores:
    get:
      tags:
        - Edições > Organizadores
      summary: Retorna o organizador da edição informada do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: edicaoId
          in: path
          description: Identificador da edição a ser retornada
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Edição não encontrada
  /eventos/{eventoId}/edicoes/{edicaoId}/organizadores/{usuarioId}:
    put:
      tags:
        - Edições > Organizadores
      summary: Configura o usuário informado como organizador da edição informada do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: edicaoId
          in: path
          description: Identificador da edição a ser modificada
          required: true
          schema:
            type: integer
            format: int64
        - name: usuarioId
          in: path
          description: Identificador do usuário a ser definido como organizador da edição
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '404':
          description: Um ou mais recursos informados não foram localizados
  /eventos/{eventoId}/edicoes/{edicaoId}/atividades:
    get:
      tags:
        - Atividades
      summary: Retorna uma lista contendo todas as atividades cadastradas para a edição informada do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: edicaoId
          in: path
          description: Identificador da edição a qual as atividades pertencem
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atividade'
    post:
      tags:
        - Atividades
      summary: Cadastra uma única atividade para a edição informada do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: edicaoId
          in: path
          description: Identificador da edição a qual a atividade pertence
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atividade'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '409':
          description: Já existe uma edição cadastrada com o identificador informado
    put:
      tags:
        - Atividades
      summary: Modifica os dados da atividade informada da edição informada do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: edicaoId
          in: path
          description: Identificador da edição a qual a atividade pertence
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atividade'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '404':
          description: Atividade não encontrada
  /eventos/{eventoId}/edicoes/{edicaoId}/atividades/{atividadeId}:
    delete:
      tags:
        - Atividades
      summary: Remove a atividade informada da edição informada do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: edicaoId
          in: path
          description: Identificador da edição a qual a atividade pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: atividadeId
          in: path
          description: Identificador da atividade a ser removida
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
        '404':
          description: Atividade não encontrada
    get:
      tags:
        - Atividades
      summary: Retorna a atividade informada da edição informada do evento informado
      parameters:
        - name: eventoId
          in: path
          description: Identificador do evento a qual a edição pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: edicaoId
          in: path
          description: Identificador da edição a qual a atividade pertence
          required: true
          schema:
            type: integer
            format: int64
        - name: atividadeId
          in: path
          description: Identificador da atividade a ser retornada
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atividade'
        '404':
          description: Atividade não encontrada
  /usuarios:
    get:
      tags:
        - Usuários
      summary: Retorna uma lista contendo todos os usuários cadastrados
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      tags:
        - Usuários
      summary: Cadastra um único usuário
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '409':
          description: Já existe uma edição cadastrada com o identificador informado
    put:
      tags:
        - Usuários
      summary: Modifica os dados do usuário informado
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '404':
          description: Usuário não encontrado
  /usuarios/{usuarioId}:
    delete:
      tags:
        - Usuários
      summary: Remove o usuário informado
      parameters:
        - name: usuarioId
          in: path
          description: Identificador do usuário a ser removido
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
        '404':
          description: Usuário não encontrado
    get:
      tags:
        - Usuários
      summary: Retorna o usuário informado
      parameters:
        - name: usuarioId
          in: path
          description: Identificador do usuário a ser retornado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
  /usuarios/{usuarioId}/mensagens:
    post:
      tags:
        - Usuários
      summary: Envia para o usuário informado uma lista de atividades
      parameters:
        - name: usuarioId
          in: path
          description: Identificador do usuário destinatário
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atividade'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '409':
          description: Já existe uma edição cadastrada com o identificador informado
  /usuarios/{usuarioId}/favoritos:
    get:
      tags:
        - Usuários > Favoritos
      summary: Retorna a lista de atividades favoritas do usuário informado
      parameters:
        - name: usuarioId
          in: path
          description: Identificador do usuário a ser retornado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atividade'
        '404':
          description: Usuário não encontrado
  /usuarios/{usuarioId}/favoritos/{atividadeId}:
    delete:
      tags:
        - Usuários > Favoritos
      summary: Remove a atividade informada da lista de atividades favoritas do usuário informado
      parameters:
        - name: usuarioId
          in: path
          description: Identificador do usuário
          required: true
          schema:
            type: integer
            format: int64
        - name: atividadeId
          in: path
          description: Identificador da atividade a ser removida
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
        '404':
          description: Usuário/Atividade não encontrado(s)
    post:
      tags:
        - Usuários > Favoritos
      summary: Cadastra a atividade informada na lista de atividades favoritas do usuário informado
      parameters:
        - name: usuarioId
          in: path
          description: Identificador do usuário a ser retornado
          required: true
          schema:
            type: integer
            format: int64
        - name: atividadeId
          in: path
          description: Identificador da atividade a ser removida
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '404':
          description: Usuário/Atividade não encontrado(s)
        '409':
          description: A atividade informada já está incluida na lista de favoritos do usuário informado
  /espacos:
    get:
      tags:
        - Espaços
      summary: Retorna uma lista contendo todos os espaços cadastrados
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Espaco'
    post:
      tags:
        - Espaços
      summary: Cadastra um único espaço
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Espaco'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '409':
          description: Já existe uma espaço cadastrada com o identificador informado
    put:
      tags:
        - Espaços
      summary: Modifica os dados do espaço informado
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Espaco'
      responses:
        '200':
          description: Operação realizada com sucesso
        '400':
          description: Dados informados são inválidos
        '404':
          description: Espaço não encontrado
  /espacos/{espacoId}:
    delete:
      tags:
        - Espaços
      summary: Remove o espaço informado
      parameters:
        - name: espacoId
          in: path
          description: Identificador do espaço
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
        '404':
          description: Espaço não encontrado
    get:
      tags:
        - Espaços
      summary: Retorna o espaço informado
      parameters:
        - name: espacoId
          in: path
          description: Identificador do espaço
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Espaco'
        '404':
          description: Espaço não encontrado
components:
  schemas:
    Evento:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        nome:
          type: string
          example: Simpósio X
        sigla:
          type: string
          example: SX
        descricao:
          type: string
          example: Simpósio da sociedade X
    Edicao:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        numero:
          type: integer
          format: int32
          example: 10
        ano:
          type: integer
          format: int32
          example: 2023
        dataInicial:
          type: string
          format: yyyy-MM-dd
          example: 2023-07-13
        dataFinal:
          type: string
          format: yyyy-MM-dd
          example: 2023-08-01
        cidade:
          type: string
          example: Niterói
        evento:
          $ref: '#/components/schemas/Evento'
    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        login:
          type: string
        email:
          type: string
        nome:
          type: string
        afiliacao:
          type: string
    Atividade:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        nome:
          type: string
        tipo:
          $ref: '#/components/schemas/AtividadeTipo'
        descricao:
          type: string
        data:
          type: string
          format: yyyy-MM-dd
        horarioInicial:
          type: string
          format: HH:mm
        horarioFinal:
          type: string
          format: HH:mm
        local:
          $ref: '#/components/schemas/Espaco'
    AtividadeTipo:
      type: string
      enum: [PALESTRA, PAINEL, SESSAO_TECNICA]
    Espaco:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        nome:
          type: string
        localizacao:
          type: string
        capacidade:
          type: integer
          format: int32
        recursos:
          type: array
          items:
            type: string
  requestBodies:
    Evento:
      description: Um objeto do tipo Evento a ser cadastrado no sistema
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Evento'
